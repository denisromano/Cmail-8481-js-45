{"version":3,"sources":["./src/app/modules/caixa-de-entrada/caixa-de-entrada.component.html","./src/app/models/Email.ts","./src/app/modules/caixa-de-entrada/caixa-de-entrada-routing.module.ts","./src/app/modules/caixa-de-entrada/caixa-de-entrada.component.ts","./src/app/modules/caixa-de-entrada/caixa-de-entrada.module.ts","./src/app/service/email.service.ts","./src/app/service/token.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,0VAA0V,oBAAoB,+CAA+C,eAAe,iDAAiD,gBAAgB,q5BAAq5B,uCAAuC,ulBAAulB,2DAA2D,qrBAAqrB,iDAAiD,wzD;;;;;;;;;;;;ACGjyF;AAAA;AAAO,MAAM,KAAK;IASd,YAAY,EAAC,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,EAAE,EAC4B;QARzF,YAAO,GAAG,EAAE,CAAC;QACb,aAAQ,GAAG,EAAE,CAAC;QACd,cAAS,GAAG,EAAE,CAAC;QACf,iBAAY,GAAG,EAAE,CAAC;QAClB,OAAE,GAAG,EAAE,CAAC;QACR,cAAS,GAAG,EAAE,CAAC;QAIP,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,WAAW,CAAC;QAC7B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;IACjB,CAAC;;;;;;;;;;;;;;;;;;;;;;;;ACnBgC;AACc;AACgB;AAGvE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACN,SAAS,EAAE,mFAAuB;KACrC;CACF,CAAC;AAMF,IAAa,2BAA2B,GAAxC,MAAa,2BAA2B;CAAI;AAA/B,2BAA2B;IAJvC,8DAAQ,CAAC;QACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;KACxB,CAAC;GACW,2BAA2B,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;AChBU;AAEW;AAQ7D,IAAa,uBAAuB,GAApC,MAAa,uBAAuB;IAElC,YAAoB,OAAqB;QAArB,YAAO,GAAP,OAAO,CAAc;QAMzC,eAAU,GAAY,EAAE,CAAC;QAEzB,UAAK,GAAG,EAAE,YAAY,EAAE,EAAE;YAChB,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE,EAAC;QAEf,wBAAmB,GAAG,KAAK,CAAC;IAZS,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAUD,IAAI,kBAAkB;QACpB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,YAAY;QACV,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;aACpB,SAAS,CACV,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,GAAG,aAAa,EAC/C,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAC3B;IACD,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACvD,CAAC;IAED,iBAAiB,CAAC,gBAAgB,EAAE,OAAO;QACzC,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC9B,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;QACtC,IAAG,gBAAgB,CAAC,MAAM,KAAK,UAAU,EAAC;YACxC,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC;iBAC5B,SAAS,CACR,GAAG,CAAC,EAAE;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,IAAI,OAAO,CAAC;YACxE,CAAC,EACA,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAE3B;SAEF;IAEH,CAAC;IAED,cAAc,CAAC,SAAiB;QAE9B,IAAG,SAAS,CAAC,OAAO,EAAC;YACnB,SAAS,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;YACrC,OAAO;SACR;QAED,IAAI,CAAC,OAAO;aACT,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;aAClB,SAAS,CACR,CAAC,QAAQ,EAAE,EAAE;YACX,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC;YAChC,yBAAyB;YACzB,2CAA2C;YAC3C,iCAAiC;YACjC,kCAAkC;YAClC,SAAS;YACT,SAAS,CAAC,KAAK,EAAE,CAAC;QACpB,CAAC,EACA,CAAC,IAAI,EAAE,EAAE;YACR,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAEhC,CAAC,CACF;IAGL,CAAC;CAEF;;YA9E8B,0EAAY;;AAF9B,uBAAuB;IALnC,+DAAS,CAAC;QACT,QAAQ,EAAE,wBAAwB;QAClC,0LAAgD;KAEjD,CAAC;GACW,uBAAuB,CAgFnC;AAhFmC;;;;;;;;;;;;;;;;;;;;;;;;;ACVK;AACM;AACwB;AACc;AACxC;AACmC;AACnB;AACL;AAgBxD,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;CAAI;AAAxB,oBAAoB;IAZhC,8DAAQ,CAAC;QACR,YAAY,EAAE,CAAC,mFAAuB,CAAC;QACvC,OAAO,EAAE;YACP,4DAAY;YACZ,kGAAsB;YACtB,0DAAW;YACX,4FAA2B;YAC3B,qEAAgB;SACjB;QACD,OAAO,EAAE,CAAC,mFAAuB,CAAC;QAClC,SAAS,EAAE,CAAC,0EAAY,CAAC;KAC1B,CAAC;GACW,oBAAoB,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;ACvB8B;AACJ;AAChB;AAGI;AAGP;AACH;AAGrC,IAAa,YAAY,GAAzB,MAAa,YAAY;IAUrB,YAAoB,IAAgB,EAAU,YAA0B;QAApD,SAAI,GAAJ,IAAI,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAc;QARhE,QAAG,GAAG,wEAAW,CAAC,GAAG,GAAC,QAAQ,CAAC;QAC/B,gBAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW;YACrB,yDAAyD;YACzD,EAAC,eAAe,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,EAAC,CAC9C;SACJ;IAE0E,CAAC;IAE5E,MAAM,CAAC,KAAgB;QAEnB,MAAM,QAAQ,GAAkB;YAC5B,EAAE,EAAE,KAAK,CAAC,YAAY;YACtB,OAAO,EAAE,KAAK,CAAC,OAAO;YACtB,OAAO,EAAE,KAAK,CAAC,QAAQ;SAC1B;QAED,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAiB,IAAI,CAAC,GAAG,EAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC;IAC9E,CAAC;IAED,OAAO,CAAC,EAAE;QACN,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAErB,OAAO,IAAI;YACC,IAAI;YACJ,MAAM,CAAC,IAAI,CAAC,GAAG,GAAC,GAAG,GAAC,EAAE,EAAC,EAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAC,CAAC;IAC3E,CAAC;IAED,MAAM;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC;aACjE,IAAI,CACD,0DAAG,CACC,aAAa,CAAC,EAAE;YACZ,OAAO,aAAa,CAAC,GAAG,CACpB,WAAW,CAAC,EAAE;gBACV,OAAO,IAAI,mDAAK,CAAC;oBACb,YAAY,EAAE,WAAW,CAAC,EAAE;oBAC5B,OAAO,EAAE,WAAW,CAAC,OAAO;oBAC5B,QAAQ,EAAE,WAAW,CAAC,OAAO;oBAC7B,WAAW,EAAE,WAAW,CAAC,UAAU;oBACnC,EAAE,EAAE,WAAW,CAAC,EAAE;iBACrB,CAAC,CAAC;YACP,CAAC,CACJ;QACL,CAAC,CACJ,CACJ;IACL,CAAC;CACJ;;YAzC6B,+DAAU;YAAwB,2DAAY;;AAV/D,YAAY;IADxB,gEAAU,EAAE;GACA,YAAY,CAmDxB;AAnDwB;;;;;;;;;;;;;;;;;;ACZkB;AAK3C,IAAa,YAAY,GAAzB,MAAa,YAAY;IAHzB;QAKU,iBAAY,GAAG,aAAa,CAAC;IAcvC,CAAC;IAZC,MAAM,CAAC,KAAa;QAClB,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,KAAK;QACH,OAAO,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;IAED,MAAM;QACJ,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;CAEF;AAhBY,YAAY;IAHxB,gEAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,YAAY,CAgBxB;AAhBwB","file":"modules-caixa-de-entrada-caixa-de-entrada-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"mdl-layout mdl-js-layout mdl-layout--fixed-drawer mdl-layout--fixed-header\\\">\\n    <cmail-header></cmail-header>\\n    <main class=\\\"mdl-layout__content\\\">\\n      <div class=\\\"page-content\\\">\\n        \\n        <ul>\\n          <li *ngFor=\\\"let email of listaEmail.reverse()\\\">\\n        <!--  <strong>Para:</strong>{{email.destinatario}}<br>\\n              <strong>Assunto:</strong>{{email.assunto}} <br>\\n              <strong>conteudo:</strong>{{email.conteudo}} -->\\n              <cmail-list-item\\n                [destinatario]=\\\"email.destinatario\\\"\\n                [assunto]=\\\"email.assunto\\\"\\n                [conteudo]=\\\"email.conteudo\\\"\\n                [dataDeEnvio]=\\\"email.dataEnvio\\\"\\n                (eventoVaiRemover)=\\\"handleDeleteEmail($event, email.id)\\\"></cmail-list-item>\\n          </li>\\n        </ul>\\n        <div class=\\\"mdl-grid\\\">\\n          \\n  \\n          <!-- Floating Multiline Textfield -->\\n          <button class=\\\"globalFab tooltip btn mdl-button mdl-js-button mdl-button--fab mdl-button--colored\\\" \\n            role=\\\"tooltip\\\" aria-label=\\\"Criar novo email\\\" (click)=\\\"toogleNewEmailForm()\\\">\\n            <span class=\\\"material-icons\\\">add</span>\\n          </button>\\n  \\n          <!-- newEmail--active -->\\n          <form \\n              #formEmail=\\\"ngForm\\\" \\n              class=\\\"newEmail cmailForm\\\"  \\n              [ngClass]=\\\"{'newEmail--active': isNewEmailFormOpen}\\\"\\n              (ngSubmit)=\\\"handleNewEmail(formEmail)\\\">\\n            <div class=\\\"newEmail__card demo-card-wide mdl-card mdl-shadow--2dp\\\">\\n              <div class=\\\"newEmail__titleArea mdl-card__title\\\">\\n                <h2 class=\\\"newEmail__title mdl-card__title-text\\\">Novo Email</h2>\\n              </div>\\n              <div class=\\\"newEmail__body mdl-card__supporting-text\\\">\\n                <!-- Form Fields -->\\n                <!-- [Para] -->\\n                <div class=\\\"cmailInputForm\\\">\\n                  <div class=\\\"mdl-textfield mdl-textfield--floating-label\\\" [ngClass]=\\\"{'is-invalid': destinatario.invalid && destinatario.touched}\\\">\\n                    <input #destinatario=\\\"ngModel\\\" [(ngModel)]=\\\"email.destinatario\\\" required type=\\\"email\\\" name=\\\"para\\\" id=\\\"para\\\" placeholder=\\\" \\\" class=\\\"mdl-textfield__input\\\">\\n                    <span class=\\\"mdl-textfield__error\\\">Informar um email é obrigatório!</span>\\n                    <label class=\\\"mdl-textfield__label\\\" for=\\\"para\\\">Para: </label>\\n                    <span class=\\\"mdl-textfield__formline\\\"></span>\\n                  </div>\\n                </div><!-- ./[Para] -->\\n  \\n                <!-- [Assunto] -->\\n                <div class=\\\"cmailInputForm\\\">\\n                  <div class=\\\"mdl-textfield mdl-textfield--floating-label\\\" [ngClass]=\\\"{'is-invalid': assunto.invalid && assunto.touched}\\\">\\n                    <input #assunto=\\\"ngModel\\\" [(ngModel)]=\\\"email.assunto\\\" required type=\\\"text\\\" name=\\\"assunto\\\" id=\\\"assunto\\\" placeholder=\\\" \\\" class=\\\"mdl-textfield__input\\\">\\n                    <span class=\\\"mdl-textfield__error\\\">Informar um assunto é obrigatório!</span>\\n                    <label class=\\\"mdl-textfield__label\\\" for=\\\"assunto\\\">Assunto: </label>\\n                    <span class=\\\"mdl-textfield__formline\\\"></span>\\n                  </div>\\n                </div><!-- ./[Assunto] -->\\n  \\n                <!-- [Conteúdo] -->\\n                <div class=\\\"cmailInputForm\\\">\\n                  <div class=\\\"mdl-textfield mdl-textfield--floating-label\\\">\\n                    <textarea #conteudo=\\\"ngModel\\\" [(ngModel)] = \\\"email.conteudo\\\" name=\\\"conteudo\\\" id=\\\"conteudo\\\" placeholder=\\\" \\\" class=\\\"mdl-textfield__input\\\"></textarea>\\n                    <span class=\\\"mdl-textfield__error\\\">Informar um conteúdo é obrigatório!</span>\\n                    <label class=\\\"mdl-textfield__label\\\" for=\\\"conteudo\\\">Conteúdo: </label>\\n                    <span class=\\\"mdl-textfield__formline\\\"></span>\\n                  </div>\\n                </div><!-- ./[Conteúdo] -->\\n  \\n                <!-- ./Form Fields -->\\n              </div>\\n              <div class=\\\"mdl-card__actions mdl-card--border\\\">\\n                <button class=\\\"mdl-button\\\">\\n                  Enviar\\n                </button>\\n              </div>\\n              <div class=\\\"newEmail__topMenu mdl-card__menu\\\">\\n                <button type=\\\"button\\\" class=\\\"mdl-button mdl-button--icon\\\" (click)=\\\"toogleNewEmailForm()\\\">\\n                  <span class=\\\"material-icons\\\">close</span>\\n                </button>\\n              </div>\\n            </div>\\n          </form>\\n        </div>\\n  \\n      </div>\\n    </main>\\n  </div>\\n  \"","import { EmailOutputDTO } from './dto/EmailOutputDTO';\n\n\nexport class Email {\n\n    assunto = \"\";\n    conteudo = \"\";\n    dataEnvio = \"\";\n    destinatario = \"\";\n    id = \"\";\n    remetente = \"\";\n\n    constructor({destinatario, assunto, conteudo, dataDeEnvio, id}:\n        {destinatario:string, assunto:string, conteudo:string, dataDeEnvio:string, id:string}){\n            this.destinatario = destinatario;\n            this.assunto = assunto;\n            this.conteudo = conteudo;\n            this.dataEnvio = dataDeEnvio;\n            this.id = id;\n        }\n\n    // constructor(emailEmIngles: EmailOutputDTO){\n    //     this.assunto = emailEmIngles.subject;\n    //     this.conteudo = emailEmIngles.content;\n    //     this.dataEnvio = emailEmIngles.created_at;\n    //     this.destinatario = emailEmIngles.from;\n    //     this.id = emailEmIngles.id;\n    //     this.remetente = emailEmIngles.to;\n    // }    \n}","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CaixaDeEntradaComponent } from './caixa-de-entrada.component';\n\n\nconst routes: Routes = [\n  {\n    path: ''\n    , component: CaixaDeEntradaComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CaixaDeEntradaRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { EmailService } from 'src/app/service/email.service';\nimport { Email } from 'src/app/models/Email';\n\n@Component({\n  selector: 'cmail-caixa-de-entrada',\n  templateUrl: './caixa-de-entrada.component.html',\n  styles: []\n})\nexport class CaixaDeEntradaComponent implements OnInit {\n\n  constructor(private servico: EmailService) { }\n\n  ngOnInit() {\n    this.listarEmails();\n  }\n\n  listaEmail: Email[] = [];\n\n  email = { destinatario: '', \n            assunto: '', \n            conteudo: ''}\n\n  private _isNewEmailFormOpen = false;\n\n  get isNewEmailFormOpen(){\n    return this._isNewEmailFormOpen;\n  }\n\n  listarEmails() {\n    this.servico.listar()\n    .subscribe(\n    listaEmailApi => this.listaEmail = listaEmailApi\n    ,erro => console.log(erro)     \n  )\n  }\n\n  toogleNewEmailForm(){\n    this._isNewEmailFormOpen = !this._isNewEmailFormOpen;\n  }\n\n  handleDeleteEmail(cliclouNaLixeira, emailId){\n    console.log(cliclouNaLixeira);\n    console.log(emailId);\n    console.log('chamada de apaga email');\n    if(cliclouNaLixeira.status === 'removing'){\n      console.log('pode apagar');\n      this.servico.deletar(emailId)\n      .subscribe(\n        res => {\n          console.log(res);\n          this.listaEmail = this.listaEmail.filter(email => email.id != emailId)         \n        }\n        ,err => console.error(err)\n        \n      )\n      \n    }\n    \n  }\n\n  handleNewEmail(formEmail: NgForm){\n\n    if(formEmail.invalid){ \n      formEmail.control.markAllAsTouched(); \n      return;\n    }\n\n    this.servico\n      .enviar(this.email)\n      .subscribe(\n        (resposta) => {\n          console.log('Deu Bom', resposta)\n          // this.listaEmail.push({\n          //   destinatario: this.email.destinatario,\n          //   assunto: this.email.assunto,\n          //   conteudo: this.email.conteudo\n          // });   \n          formEmail.reset();   \n        }\n        ,(erro) => {\n          console.log('deu ruim', erro);\n          \n        }\n      )\n\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CaixaDeEntradaComponent } from './caixa-de-entrada.component';\nimport { SharedComponentsModule } from 'src/app/components/shared-components.module';\nimport { FormsModule } from '@angular/forms';\nimport { CaixaDeEntradaRoutingModule } from './caixa-de-entrada-routing.module';\nimport { EmailService } from 'src/app/service/email.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n\n\n@NgModule({\n  declarations: [CaixaDeEntradaComponent],\n  imports: [\n    CommonModule,\n    SharedComponentsModule,\n    FormsModule,\n    CaixaDeEntradaRoutingModule,\n    HttpClientModule\n  ],\n  exports: [CaixaDeEntradaComponent],\n  providers: [EmailService]\n})\nexport class CaixaDeEntradaModule { }\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Injectable } from '@angular/core';\nimport { EmailInputDTO } from '../models/dto/EmailInputDTO';\nimport { EmailForm } from '../models/EmailForm';\nimport { TokenService } from './token.service';\nimport { EmailOutputDTO } from '../models/dto/EmailOutputDTO';\nimport { Observable } from 'rxjs';\nimport { Email } from '../models/Email';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class EmailService {\n    \n    private url = environment.api+'emails';\n    private httpOptions = {\n        headers: new HttpHeaders(\n           // {'Authorization': localStorage.getItem('cmail-token')}\n           {'Authorization': this.tokenService.obter()}\n        )\n    }\n\n    constructor(private http: HttpClient, private tokenService: TokenService) {}\n\n    enviar(email: EmailForm){\n\n        const emailDTO: EmailInputDTO = {\n            to: email.destinatario,\n            subject: email.assunto,\n            content: email.conteudo\n        }\n\n        return this.http.post<EmailOutputDTO>(this.url,emailDTO, this.httpOptions)\n    }\n\n    deletar(id){\n        console.log('${id}');\n        \n        return this.\n                    http.\n                    delete(this.url+'/'+id,{headers: this.httpOptions.headers})               \n    }\n\n    listar(): Observable<Email[]> {\n        return this.http.get<EmailOutputDTO[]>(this.url, this.httpOptions)\n        .pipe(\n            map(\n                listaEmIngles => {\n                    return listaEmIngles.map(\n                        emailIngles => {\n                            return new Email({\n                                destinatario: emailIngles.to,\n                                assunto: emailIngles.subject,\n                                conteudo: emailIngles.content,\n                                dataDeEnvio: emailIngles.created_at,\n                                id: emailIngles.id\n                            });\n                        }\n                    )\n                }\n            )\n        )\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  private tokenKeyName = 'cmail-token';\n\n  gravar(token: string): void {\n    localStorage.setItem(this.tokenKeyName, token);\n  }\n\n  obter(): string {\n    return localStorage.getItem(this.tokenKeyName);\n  }\n\n  apagar(): void {\n    localStorage.removeItem(this.tokenKeyName);\n  }\n\n}"],"sourceRoot":"webpack:///"}