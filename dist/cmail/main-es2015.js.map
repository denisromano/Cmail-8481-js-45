{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/guards/auth.guard.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard } from './guards/auth.guard';\n\nconst appRoutes: Routes = [\n    {\n        path: 'cadastro',\n        loadChildren: () => import('./modules/cadastro/cadastro.module').then(m => m.CadastroModule)\n    }\n    ,{\n        path: 'login',\n        loadChildren: () => import('./modules/login/login.module').then(m => m.LoginModule)\n    }\n    ,{\n        path: '',\n        loadChildren: () => import('./modules/caixa-de-entrada/caixa-de-entrada.module').then(m => m.CaixaDeEntradaModule)\n        ,canActivate: [AuthGuard]\n    },\n    {\n        path: '',\n        redirectTo: '',\n        pathMatch: 'full'\n    }\n    ,{\n        path: '**'\n        ,redirectTo: ''\n    }\n]\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [AuthGuard]\n})\n\nexport class AppRoutingModule{}","import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>',\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { CanActivate, Router } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private roteador: Router){}\n\n    canActivate(){\n        console.log('passou no guard!!!');\n        \n        if (localStorage.getItem('cmail-token')) {\n            console.log('tem token');\n            \n        } else {\n            console.log('sem token');\n            this.roteador.navigate(['login'])\n        }\n\n        return true\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n  ,api: 'http://localhost:3200/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}